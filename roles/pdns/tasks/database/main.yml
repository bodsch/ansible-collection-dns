---

# - name: d
#   debug:
#     msg:
#       - "{{ pdns_backends }}"
#       - "{{ pdns_backends | bodsch.dns.pdns_backend_types(version=pdns_version.full_version) }}"
#       - "{{ pdns_backends_packages | default({}) }}"
#       - "{{ pdns_backends.gsqlite3 | default({}) }}"
#       - "{{ pdns_backends.gsqlite3 | default({}) | count }}"

- name: define backend types
  ansible.builtin.set_fact:
    pdns_backend_types: "{{ pdns_backends | bodsch.dns.pdns_backend_types(version=pdns_version.full_version) }}"

# - name: d
#   debug:
#     msg:
#       - "{{ pdns_backend_types }}"
#       - "{{ pdns_backend_types | select('search', 'sqlite3') }}"
#       - "{{ 'sqlite3' in pdns_backend_types }}"

- name: backend handling
  #when:
  #  - ansible_os_family | lower == 'debian'
  block:
    - name: define backend packages
      ansible.builtin.set_fact:
        pdns_backend_packages: "{{ pdns_backend_types | bodsch.dns.pdns_backend_packages(_pdns_backend_packages) }}"

    - name: install pdns backends
      ansible.builtin.package:
        name: "{{ pdns_backend_packages }}"
        state: present
      when:
        - pdns_backend_packages is defined
        - pdns_backend_packages | count > 0

- name: mysql database
  ansible.builtin.include_tasks: database/mysql.yml
  when:
    - pdns_backends is defined
    - "'mysql' in pdns_backend_types"
  tags:
    - db
    - mysql

- name: sqlite database
  ansible.builtin.include_tasks: database/sqlite3.yml
  when:
    - pdns_backends is defined
    - "'sqlite3' in pdns_backend_types"
  tags:
    - db
    - sqlite

# - name: Install and configure LMDB database
#   ansible.builtin.include_tasks: database/lmdb.yml
#   when: "pdns_lmdb_databases_locations | length > 0"
#   tags:
#     - db
#     - lmdb
