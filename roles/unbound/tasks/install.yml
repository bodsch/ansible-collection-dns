---

- name: install unbound
  ansible.builtin.package:
    name: unbound
    state: present

- name: unbound root.key
  when:
    - ansible_os_family | lower == 'debian'
  block:
    - name: test existing root.key
      ansible.builtin.stat:
        path: "/var/lib/unbound/root.key"
        get_mime: true
      register: __unbound_rootkey_exists

    - name: detect unbound helper
      ansible.builtin.stat:
        path: "/usr/lib/unbound/package-helper"
        get_mime: false
      register: _package_helper

    - name: detect unbound helper
      ansible.builtin.stat:
        path: "/usr/libexec/unbound-helper"
        get_mime: false
      register: _unbound_helper

    - name: define helper
      ansible.builtin.set_fact:
        unbound_helper: "{{ _package_helper | bodsch.dns.unbound_helper(_unbound_helper) }}"

    - name: create root.key  # noqa no-changed-when
      ansible.builtin.command: |
        {{ unbound_helper }} root_trust_anchor_update
      when:
        - not __unbound_rootkey_exists.stat.exists

- name: merge unbound config between defaults and custom for server.conf
  ansible.builtin.set_fact:
    unbound_config_server: "{{ unbound_config_server_defaults | combine(unbound_config_server, recursive=True) }}"

- name: update unbound server confg
  when:
    - ansible_os_family | lower == 'archlinux'
  block:
    - name: update dictionary
      ansible.builtin.set_fact:
        unbound_config_server: "{{ unbound_config_server | combine({'auto-trust-anchor-file': '/etc/unbound/trusted-key.key'}) }}"

    - name: fix rights for auto-trust-anchor-file
      ansible.builtin.file:
        path: "{{ unbound_config_server['auto-trust-anchor-file'] }}"
        owner: "{{ unbound_user }}"
        group: "{{ unbound_group }}"
        mode: "0660"
      when:
        - unbound_config_server['auto-trust-anchor-file'] is defined

- name: remove distribution config files
  ansible.builtin.file:
    path: "{{ unbound_conf_dir }}/unbound.conf.d/{{ item }}"
    state: absent
  loop:
    - qname-minimisation.conf
    - root-auto-trust-anchor-file.conf

- name: unbound.log handling
  when:
    - unbound_config_server.logfile is defined
    - unbound_config_server.logfile | length != 0
  block:
    - name: test existing unbound.log
      ansible.builtin.stat:
        path: "/{{ unbound_config_server.logfile }}"
        get_mime: true
      register: __unbound_logfile_exists

    - name: create unbound.log
      ansible.builtin.file:
        name: "{{ unbound_config_server.logfile }}"
        state: touch
        owner: "{{ unbound_user }}"
        group: "{{ unbound_group }}"
        mode: "0666"
      when:
        - not __unbound_logfile_exists.stat.exists

# -----------------------------------------------------------------

- name: systemd
  when:
    - ansible_service_mgr == "systemd"
  block:
    - name: populate service facts
      ansible.builtin.service_facts:
      register: systemd_facts
      no_log: true
      tags:
        - unbound
        - install

    - name: set systemd unit name
      ansible.builtin.set_fact:
        resolved_unit_file: "{{ ansible_facts.services | bodsch.systemd.service('systemd-resolved', state='running') }}"
      tags:
        - unbound
        - install

    - name: disable systemd-resolved
      service:
        name: "{{ resolved_unit_file }}"
        state: stopped
        enabled: false
      when:
        - resolved_unit_file | default('') | string | length > 0
