---

# DNS_ROOT_KEY_FILE="/usr/share/dns/root.key" -> ROOT_TRUST_ANCHOR_FILE="/var/lib/unbound/root.key"

- name: merge unbound config between defaults and custom for server.conf
  ansible.builtin.set_fact:
    unbound_config_server: "{{ unbound_config_server_defaults | combine(unbound_config_server, recursive=True) }}"
    unbound_config_remote_control: "{{ unbound_config_remote_control_defaults | combine(unbound_config_remote_control, recursive=True) }}"
    unbound_config_cachedb: "{{ unbound_config_cachedb_defaults | combine(unbound_config_cachedb, recursive=True) }}"
    unbound_config_forward_zone: "{{ unbound_config_forward_zone_defaults | combine(unbound_config_forward_zone, recursive=True) }}"
    unbound_config_stub_zone: "{{ unbound_config_stub_zone_defaults | combine(unbound_config_stub_zone, recursive=True) }}"

- name: create key file
  ansible.builtin.command: |
    unbound-control-setup -d {{ unbound_conf_dir }}
  args:
    creates: "{{ unbound_certs.server.key_file }}"

- name: force update with cert
  ansible.builtin.command: |
    unbound-anchor -v -F -C /etc/unbound/unbound.conf
  register: anchor
  ignore_errors: true
  changed_when: anchor.rc != 0
  failed_when: anchor.rc != 0

- name: create {{ unbound_environment_file }}
  ansible.builtin.template:
    src: etc/default.j2
    dest: "{{ unbound_environment_file }}"
    mode: "0644"
    backup: true
    validate: sh -n %s
  notify: restart unbound

- name: fix rights for unbound keys
  ansible.builtin.file:
    mode: "0664"
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    path: "{{ item }}"
  loop:
    - "{{ unbound_certs.server.key_file }}"
    - "{{ unbound_certs.server.cert_file }}"
    - "{{ unbound_certs.control.key_file }}"
    - "{{ unbound_certs.control.cert_file }}"

- name: get root.hints
  ansible.builtin.get_url:
    url: https://www.internic.net/domain/named.cache
    dest: "/etc/unbound/root.hints"
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    mode: "0660"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2

- name: "create {{ unbound_conf_dir }}/unbound.conf.d directory"
  ansible.builtin.file:
    path: "{{ unbound_conf_dir }}/unbound.conf.d"
    state: directory
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    mode: "0755"

- name: create server.conf
  ansible.builtin.template:
    src: etc/unbound.conf.d/server.conf.j2
    dest: "{{ unbound_conf_dir }}/unbound.conf.d/server.conf"
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    mode: "0666"
    backup: true
    # validate: "unbound-checkconf %s"
  notify: restart unbound

- name: create remote_control.conf
  ansible.builtin.template:
    src: etc/unbound.conf.d/remote_control.conf.j2
    dest: "{{ unbound_conf_dir }}/unbound.conf.d/remote_control.conf"
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    mode: "0666"
    backup: true
    # validate: "unbound-checkconf %s"
  notify: restart unbound

- name: create forward_zone.conf
  ansible.builtin.template:
    src: etc/unbound.conf.d/forward_zone.conf.j2
    dest: "{{ unbound_conf_dir }}/unbound.conf.d/forward_zone.conf"
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    mode: "0666"
    backup: true
    # validate: "unbound-checkconf %s"
  notify: restart unbound

- name: create cache_db.conf
  ansible.builtin.template:
    src: etc/unbound.conf.d/cache_db.conf.j2
    dest: "{{ unbound_conf_dir }}/unbound.conf.d/cache_db.conf"
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    mode: "0666"
    backup: true
    # validate: "unbound-checkconf %s"
  notify: restart unbound

- name: create unbound configuration
  ansible.builtin.template:
    src: etc/unbound.conf.j2
    dest: "{{ unbound_conf_dir }}/unbound.conf"
    owner: "{{ unbound_user }}"
    group: "{{ unbound_group }}"
    mode: "0666"
    backup: true
    # validate: "unbound-checkconf %s"
  notify: restart unbound

- name: check configuration  # noqa no-changed-when
  ansible.builtin.command:
    unbound-checkconf {{ unbound_conf_dir }}/unbound.conf
  register: __configuration_check
  changed_when: __configuration_check.rc != 0
  failed_when: __configuration_check.rc != 0

- name: configuration error
  ansible.builtin.debug:
    msg: "{{ __configuration_check.stderr_lines }}"
  when:
    - not __configuration_check.rc | int == 0
