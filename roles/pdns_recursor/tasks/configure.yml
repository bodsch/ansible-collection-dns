---

- name: merge powerdns-recursor configuration between defaults and custom
  ansible.builtin.set_fact:
    pdns_recursor_carbon: "{{ pdns_recursor_defaults_carbon | combine(pdns_recursor_carbon, recursive=True) }}"
    pdns_recursor_dnssec: "{{ pdns_recursor_defaults_dnssec | combine(pdns_recursor_dnssec, recursive=True) }}"
    pdns_recursor_ecs: "{{ pdns_recursor_defaults_ecs | combine(pdns_recursor_ecs, recursive=True) }}"
    pdns_recursor_incoming: "{{ pdns_recursor_defaults_incoming | combine(pdns_recursor_incoming, recursive=True) }}"
    pdns_recursor_logging: "{{ pdns_recursor_defaults_logging | combine(pdns_recursor_logging, recursive=True) }}"
    pdns_recursor_nod: "{{ pdns_recursor_defaults_nod | combine(pdns_recursor_nod, recursive=True) }}"
    pdns_recursor_outgoing: "{{ pdns_recursor_defaults_outgoing | combine(pdns_recursor_outgoing, recursive=True) }}"
    pdns_recursor_packetcache: "{{ pdns_recursor_defaults_packetcache | combine(pdns_recursor_packetcache, recursive=True) }}"
    pdns_recursor_recordcache: "{{ pdns_recursor_defaults_recordcache | combine(pdns_recursor_recordcache, recursive=True) }}"
    pdns_recursor_recursor: "{{ pdns_recursor_defaults_recursor | combine(pdns_recursor_recursor, recursive=True) }}"
    pdns_recursor_snmp: "{{ pdns_recursor_defaults_snmp | combine(pdns_recursor_snmp, recursive=True) }}"
    pdns_recursor_webservice: "{{ pdns_recursor_defaults_webservice | combine(pdns_recursor_webservice, recursive=True) }}"

- name: generate the powerdns-recursor configuration
  ansible.builtin.template:
    src: etc/powerdns/recursor.conf.j2
    dest: "{{ pdns_recursor_config_dir }}/recursor.conf"
    owner: "{{ pdns_recursor_owner }}"
    group: "{{ pdns_recursor_group }}"
    mode: "0640"
    backup: true
  notify:
    - restart powerdns-recursor



# - block:
#
#     - name: Ensure the PowerDNS Recursor drop-in unit overrides directory exists (systemd)
#       file:
#         name: "/etc/systemd/system/{{ pdns_recursor_service_name }}.service.d"
#         state: directory
#         owner: root
#         group: root
#
#     - name: Override the PowerDNS Recursor unit (systemd)
#       template:
#         src: "override-service.systemd.conf.j2"
#         dest: "/etc/systemd/system/{{ pdns_recursor_service_name }}.service.d/override.conf"
#         owner: root
#         group: root
#       when: pdns_recursor_service_overrides | length > 0
#       register: _pdns_recursor_override_unit
#
#     - name: Reload systemd
#       command: systemctl daemon-reload
#       when: not pdns_recursor_disable_handlers
#         and _pdns_recursor_override_unit.changed
#
#   when: ansible_service_mgr == "systemd"
#
# - name: Ensure that the PowerDNS Recursor configuration directory exists
#   file:
#     name: "{{ pdns_recursor_config_dir }}"
#     state: directory
#     owner: "{{ pdns_recursor_file_owner }}"
#     group: "{{ pdns_recursor_file_group }}"
#     mode: 0750
#
# - name: Generate the PowerDNS Recursor configuration
#   template:
#     src: recursor.conf.j2
#     dest: "{{ pdns_recursor_config_dir }}/{{ pdns_recursor_config_file }}"
#     owner: "{{ pdns_recursor_file_owner }}"
#     group: "{{ pdns_recursor_file_group }}"
#     mode: 0640
#   register: _pdns_recursor_configuration
#
# - name: Ensure that the PowerDNS Recursor 'include-dir' directory exists
#   file:
#     name: "{{ pdns_recursor_config['include-dir'] }}"
#     state: directory
#     owner: "{{ pdns_recursor_file_owner }}"
#     group: "{{ pdns_recursor_file_group }}"
#     mode: "{{ pdns_recursor_config_include_dir_mode }}"
#   when: "pdns_recursor_config['include-dir'] is defined"
#   register: _pdns_recursor_configuration_include_dir
#
# - block:
#
#     - name: Ensure that the PowerDNS Recursor configuration from-files directory exists
#       ansible.builtin.file:
#         name: "{{ item.dest | dirname }}"
#         state: directory
#         owner: "{{ pdns_recursor_file_owner }}"
#         group: "{{ pdns_recursor_file_group }}"
#         mode: "{{ pdns_recursor_config_from_files_dir_mode }}"
#       loop: "{{ pdns_recursor_config_from_files }}"
#
#     - name: Copy the PowerDNS Recursor configuration from-files files
#       ansible.builtin.copy:
#         content: "{{ item.content | default(omit) }}"
#         src: "{{ item.src | default(omit) }}"
#         dest: "{{ item.dest }}"
#         owner: "{{ pdns_recursor_file_owner }}"
#         group: "{{ pdns_recursor_file_group }}"
#         mode: "{{ pdns_recursor_config_from_files_dir_mode }}"
#       loop: "{{ pdns_recursor_config_from_files }}"
#       register: _pdns_recursor_configuration_from_files
#
#   when: "pdns_recursor_config_from_files | length > 0"
#
# - name: Generate the PowerDNS Recursor Lua config-file
#   copy:
#     dest: "{{ pdns_recursor_config_lua }}"
#     content: "{{ pdns_recursor_config_lua_file_content }}"
#     owner: "{{ pdns_recursor_file_owner }}"
#     group: "{{ pdns_recursor_file_group }}"
#     mode: 0640
#   register: _pdns_recursor_lua_file_configuraton
#   when: "pdns_recursor_config_lua_file_content | length > 0"
#
# - name: Generate PowerDNS Recursor Lua dns-script
#   copy:
#     dest: "{{ pdns_recursor_config_dns_script }}"
#     content: "{{ pdns_recursor_config_dns_script_file_content }}"
#     owner: "{{ pdns_recursor_file_owner }}"
#     group: "{{ pdns_recursor_file_group }}"
#     mode: 0640
#   register: _pdns_recursor_dns_script_configuration
#   when: "pdns_recursor_config_dns_script_file_content | length > 0"
#
# - name: Restart PowerDNS Recursor
#   service:
#     name: "{{ pdns_recursor_service_name }}"
#     state: restarted
#     sleep: 1
#   when: not pdns_recursor_disable_handlers
#     and pdns_recursor_service_state != 'stopped'
#     and (_pdns_recursor_override_unit.changed
#       or _pdns_recursor_configuration_include_dir.changed
#       or _pdns_recursor_configuration.changed
#       or _pdns_recursor_configuration_from_files.changed
#       or _pdns_recursor_lua_file_configuraton.changed
#       or _pdns_recursor_dns_script_configuration.changed)
#
