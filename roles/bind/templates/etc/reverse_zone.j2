#jinja2: trim_blocks: True, lstrip_blocks: True
{% set _data = item | bodsch.dns.reverse_zone_data(bind_zone_soa, ansible_hostname) %}
{% set _zone_data = _data.get("reverse_zone_data", None) %}
{% set _zone_hash = _data.get("zone_hash", None) %}
{% set _zone = _zone_data['domain'] | bodsch.dns.zone_serial(_zone_hash, bind_zone_data, network=item.1) %}
; {{ ansible_managed }}
;
; Reverse zone file for {{ _zone_data['domain'] }}
; Hash: {{ _zone['hash'] }} {{ _zone['serial'] }}

$TTL {{ _zone_data['ttl'] }}

; soa
{{ _zone_data['revip'] }} IN SOA {{ _zone_data['soa_name_server'] | first }} {{ _zone_data['hostmaster_email'] }} (
                               {{ (_zone['serial'] | string).ljust(20) }} ; serial
                               {{ (_zone_data['refresh'] | string).ljust(20) }} ; refresh (1 week)
                               {{ (_zone_data['retry'] | string).ljust(20) }} ; retry (1 day)
                               {{ (_zone_data['expire'] | string).ljust(20) }} ; expire (4 weeks)
                               {{ (_zone_data['minimum'] | string).ljust(20) }} ; minimum (1 day)
                               )
; --------------------------------------------------------------------------------------
; dns
{% if _zone_data['soa_name_server'] | length > 0 %}
  {% for ns in _zone_data['soa_name_server'] %}
                           IN  NS     {{ ns }}
  {% endfor %}
{% endif %}
{% if _zone_data.other_name_servers is defined and
      _zone_data.other_name_servers | bodsch.core.type == "list" %}
  {% for ns in _zone_data.other_name_servers %}
                           IN  NS     {{ ns }}
  {% endfor %}
{% endif %}

; --------------------------------------------------------------------------------------
; hosts
{% if _zone_data['hosts'] | length > 0 %}
  {% for host in _zone_data['hosts'] %}
    {% set ttl = '' %}
    {% if host.ttl is defined and host.ttl | string | length > 0 %}
      {% set ttl = host.ttl %}
    {% endif %}
    {% if host.ip is defined %}
      {% if host.ip == item.1 %}
@                      IN  PTR    {{ host.name }}.{{ _zone_data['domain'] }}.
      {% else %}
{#
    ; name         {{ host.name }}
    ; ip           {{ host.ip }}
    ; .1           {{ item.1 }}
    ; {{ host.ip.startswith(item.1) }}
#}
        {% if host.ip is string and host.ip.startswith(item.1) %}
          {% if host.name == '@' %}
{{ ('.'.join(host.ip.replace(item.1 + '.','').split('.')[::-1])).ljust(20) }}{{ (ttl | string).rjust(6) }} IN  PTR    {{ _zone_data['domain'] }}.
          {% else %}
            {% if "$GENERATE" not in host.name.upper() %}
{{ ('.'.join(host.ip.replace(item.1+'.','').split('.')[::-1])).ljust(20) }}{{ (ttl | string).rjust(6) }} IN  PTR    {{ host.name }}.{{ _zone_data['domain'] }}.
            {% endif %}
            {% if "$GENERATE" in host.name.upper() %}
{{ host.name.rsplit(None, 1)[0] }} {{ ('.'.join(host.ip.replace(item.1+'.','').split('.')[::-1])).ljust(20) }} IN  PTR    {{ host.name.rsplit(None, 1)[1] }}.{{ _zone_data['domain'] }}.
            {% endif %}
          {% endif %}
        {% else %}
          {% for ip in host.ip %}
            {% if ip.startswith(item.1) %}
{{ ('.'.join(ip.replace(item.1+'.','').split('.')[::-1])).ljust(20) }}{{ (ttl | string).rjust(6) }} IN  PTR    {{ _zone_data['domain'] }}.
              {% if host.name == '@' %}
              {% else %}
{{ ('.'.join(ip.replace(item.1+'.','').split('.')[::-1])).ljust(20) }}{{ (ttl | string).rjust(6) }} IN  PTR   {{ host.name }}.{{ _zone_data['domain'] }}.
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endif %}
    {% endif %}
  {% endfor %}
{% endif %}
; --------------------------------------------------------------------------------------
